{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","console","log","nextSibling","parentNode","insertBefore","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","arr","x","push"],"mappings":"AAAAA,MAAM,CAACC,GAAP,GAAa;AACT;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGAC,EAAAA,MAZS,kBAYFC,MAZE,EAYM;AACX,QAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAlB;AACAF,IAAAA,SAAS,CAACG,SAAV,GAAsBJ,MAAM,CAACK,IAAP,EAAtB;AACA,WAAOJ,SAAS,CAACK,OAAV,CAAkBC,UAAzB;AACH,GAhBQ;AAkBTC,EAAAA,KAlBS,iBAkBHC,IAlBG,EAkBGC,KAlBH,EAkBU;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,WAAjB;AACAJ,IAAAA,IAAI,CAACK,UAAL,CAAgBC,YAAhB,CAA6BL,KAA7B,EAAoCD,IAAI,CAACI,WAAzC;AACH,GArBQ;AAuBTG,EAAAA,MAvBS,kBAuBFP,IAvBE,EAuBIC,KAvBJ,EAuBW;AAChBD,IAAAA,IAAI,CAACK,UAAL,CAAgBC,YAAhB,CAA6BL,KAA7B,EAAoCD,IAApC;AACH,GAzBQ;AA2BTQ,EAAAA,MA3BS,kBA2BFC,MA3BE,EA2BMT,IA3BN,EA2BY;AACjBS,IAAAA,MAAM,CAACC,WAAP,CAAmBV,IAAnB;AACH,GA7BQ;AA+BT;AACAW,EAAAA,IAhCS,gBAgCJX,IAhCI,EAgCES,MAhCF,EAgCU;AACfpB,IAAAA,GAAG,CAACkB,MAAJ,CAAWP,IAAX,EAAiBS,MAAjB;AACApB,IAAAA,GAAG,CAACmB,MAAJ,CAAWC,MAAX,EAAmBT,IAAnB;AACH,GAnCQ;AAqCTY,EAAAA,MArCS,kBAqCFZ,IArCE,EAqCI;AACTA,IAAAA,IAAI,CAACK,UAAL,CAAgBQ,WAAhB,CAA4Bb,IAA5B;AACA,WAAOA,IAAP;AACH,GAxCQ;AA0CT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACAc,EAAAA,KAzDS,iBAyDHd,IAzDG,EAyDG;AACR;AACA;AAFQ,QAIJe,UAJI,GAKJf,IALI,CAIJe,UAJI;AAMR,QAAMC,GAAG,GAAG,EAAZ;AACA,QAAIC,CAAC,GAAGjB,IAAI,CAACF,UAAb;;AACA,WAAOE,IAAI,CAACF,UAAZ,EAAwB;AACpBkB,MAAAA,GAAG,CAACE,IAAJ,CAAS7B,GAAG,CAACuB,MAAJ,CAAWK,CAAX,CAAT;AACAA,MAAAA,CAAC,GAAGjB,IAAI,CAACF,UAAT;AACH;;AACD,WAAOkB,GAAP;AACH;AAtEQ,CAAb","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    // create(tagName) {\r\n    //     return document.createElement(tagName);\r\n    // }\r\n\r\n    // create(string) {\r\n    //     const container = document.createElement('div')\r\n    //     container.innerHTML = string\r\n    //     return container.children[0]\r\n    // },\r\n\r\n\r\n    create(string) {\r\n        const container = document.createElement('template')\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    },\r\n\r\n    after(node, node2) {\r\n        console.log(node.nextSibling)\r\n        node.parentNode.insertBefore(node2, node.nextSibling);\r\n    },\r\n\r\n    before(node, node2) {\r\n        node.parentNode.insertBefore(node2, node);\r\n    },\r\n\r\n    append(parent, node) {\r\n        parent.appendChild(node);\r\n    },\r\n\r\n    //用parent包住node\r\n    wrap(node, parent) {\r\n        dom.before(node, parent)\r\n        dom.append(parent, node)\r\n    },\r\n\r\n    remove(node) {\r\n        node.parentNode.removeChild(node);\r\n        return node\r\n    },\r\n\r\n    // empty(node) {\r\n    //     //node.innerHTML = ''\r\n    //     const {\r\n    //         childNodes\r\n    //     } = node\r\n    //     const arr = []\r\n    //     for (let i = 0; i < childNodes.length; i++) {\r\n    //         dom.remove(childNodes[i])\r\n    //         arr.push(childNodes[i])\r\n    //     }\r\n    //     return arr\r\n    // }\r\n\r\n\r\n    //用while循环做\r\n    empty(node) {\r\n        //node.innerHTML = ''\r\n        //const childNodes=node.childNodes\r\n        const {\r\n            childNodes\r\n        } = node\r\n        const arr = []\r\n        let x = node.firstChild\r\n        while (node.firstChild) {\r\n            arr.push(dom.remove(x))\r\n            x = node.firstChild\r\n        }\r\n        return arr\r\n    }\r\n\r\n};"]}